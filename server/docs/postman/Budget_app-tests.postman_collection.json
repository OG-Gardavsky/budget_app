{
	"info": {
		"_postman_id": "9372c493-5db6-488a-919a-b46b832bb5f5",
		"name": "Budget_app-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user management",
			"item": [
				{
					"name": "get list of currencies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/currency/list",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"currency",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 201) {\r",
									"    pm.collectionVariables.set('collectionAuthToken', pm.response.json().token)\r",
									"} \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{userName}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\",\r\n    \"primarCurrency\": \"{{primarCurrency}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.collectionVariables.set('collectionAuthToken', '')\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/users/logout",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.collectionVariables.set('collectionAuthToken', pm.response.json().token)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/users/login",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User info - logged in",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"pm.test(\"users Name match\", function () {\r",
									"    pm.expect(pm.response.json().name).to.equal(pm.collectionVariables.get(\"userName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"users email match\", function () {\r",
									"    pm.expect(pm.response.json().email).to.equal(pm.collectionVariables.get(\"userEmail\"));\r",
									"});\r",
									"\r",
									"pm.test(\"users primarCurrency match\", function () {\r",
									"    pm.expect(pm.response.json().primarCurrency).to.equal(pm.collectionVariables.get(\"primarCurrency\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout All sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.collectionVariables.set('collectionAuthToken', '')\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/users/logoutAll",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users",
								"logoutAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User info - logged out",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(401)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.collectionVariables.set('collectionAuthToken', pm.response.json().token)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/users/login",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.collectionVariables.set('collectionAuthToken', '')\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"oldPassword\": \"{{userPassword}}\",\r\n    \"newPassword\": \"{{changeduserPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/users/password",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.collectionVariables.set('collectionAuthToken', pm.response.json().token)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{changeduserPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/users/login",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "change primar Currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"primarCurrency\": \"{{changedPrimarCurrency}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User info - logged in 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"pm.test(\"users Name match\", function () {\r",
									"    pm.expect(pm.response.json().name).to.equal(pm.collectionVariables.get(\"userName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"users email match\", function () {\r",
									"    pm.expect(pm.response.json().email).to.equal(pm.collectionVariables.get(\"userEmail\"));\r",
									"});\r",
									"\r",
									"pm.test(\"users primarCurrency match\", function () {\r",
									"    pm.expect(pm.response.json().primarCurrency).to.equal(pm.collectionVariables.get(\"changedPrimarCurrency\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "account management",
			"item": [
				{
					"name": "Create new cash Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 201) {\r",
									"    pm.collectionVariables.set('cashAccountId', pm.response.json()._id)\r",
									"} "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{cashAccountName}}\",\r\n    \"type\": \"cash\",\r\n    \"initialBalance\": {{initialBalance}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/accounts",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new debit Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 201) {\r",
									"    pm.collectionVariables.set('debitAccountId', pm.response.json()._id)\r",
									"} "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{debitAccountName}}\",\r\n    \"type\": \"debit\",\r\n    \"initialBalance\": {{initialBalance}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/accounts",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new credit Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 201) {\r",
									"    pm.collectionVariables.set('creditAccountId', pm.response.json()._id)\r",
									"} "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{creditAccountName}}\",\r\n    \"type\": \"credit\",\r\n    \"limit\": {{creditLimit}},\r\n    \"initialBalance\": {{initialBalance}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/accounts",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new debt Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 201) {\r",
									"    pm.collectionVariables.set('debtAccountId', pm.response.json()._id)\r",
									"} "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{debtAccountName}}\",\r\n    \"type\": \"debt\",\r\n    \"initialBalance\": {{initialBalance}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/accounts",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new invest Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 201) {\r",
									"    pm.collectionVariables.set('investAccountId', pm.response.json()._id)\r",
									"} "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{investAccountName}}\",\r\n    \"type\": \"invest\",\r\n    \"initialBalance\": {{initialBalance}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/accounts",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "category-management",
			"item": [
				{
					"name": "Create new Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"\r",
									"if (pm.response.code === 201) {\r",
									"    pm.collectionVariables.set('categoryId', pm.response.json()._id)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{categoryName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/categories",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "update Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{changedCategoryName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/categories/id:{{categoryId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"categories",
								"id:{{categoryId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "transaction-management",
			"item": [
				{
					"name": "Create new Income/expense",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"if (pm.response.code === 201) {\r",
									"    pm.collectionVariables.set('firstTransactionId', pm.response.json()._id)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subtype\": \"expense\",\r\n    \"amount\": 42,\r\n    \"categoryId\": \"{{categoryId}}\",\r\n    \"accountId\": \"{{cashAccountId}}\",\r\n    \"name\": \"testing cash transaction\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/transactions/basic",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"transactions",
								"basic"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 10,\r\n    \"givingAccountId\": \"{{cashAccountId}}\",\r\n    \"receivingAccountId\": \"{{debitAccountId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/transactions/transfer",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"transactions",
								"transfer"
							]
						}
					},
					"response": []
				},
				{
					"name": "create Debts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": \"10\",\r\n    \"basicAccountId\": \"{{creditAccountId}}\",\r\n    \"debtAccountId\": \"{{debtAccountId}}\",\r\n    \"subtype\": \"borrow\",\r\n    \"accountingDate\": \"{{currentdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/transactions/debt",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"transactions",
								"debt"
							]
						}
					},
					"response": []
				},
				{
					"name": "create invest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subtype\": \"deposit\",\r\n    \"basicAccountId\": \"{{cashAccountId}}\",\r\n    \"investAccountId\": \"{{investAccountId}}\",\r\n    \"amount\": 10,\r\n    \"accountingDate\": \"{{currentdate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/transactions/invests",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"transactions",
								"invests"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of Transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/transactions?type=basic&limit=10&sort=desc",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"transactions"
							],
							"query": [
								{
									"key": "type",
									"value": "basic"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/transactions/id:{{firstTransactionId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"transactions",
								"id:{{firstTransactionId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "stats Copy",
			"item": [
				{
					"name": "categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/stats/type:expense?month=5&year=2021",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"stats",
								"type:expense"
							],
							"query": [
								{
									"key": "month",
									"value": "5"
								},
								{
									"key": "year",
									"value": "2021"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "total sum in month",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/stats/total/type:expense?month=4&year=2021",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"stats",
								"total",
								"type:expense"
							],
							"query": [
								{
									"key": "month",
									"value": "4"
								},
								{
									"key": "year",
									"value": "2021"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "total sum on Account type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/stats/balance?type=all",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"stats",
								"balance"
							],
							"query": [
								{
									"key": "type",
									"value": "all"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200)\r",
							"})\r",
							"\r",
							"if (pm.response.code === 200) {\r",
							"    pm.collectionVariables.set('collectionAuthToken', '')\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"{{changeduserPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/users/me",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{collectionAuthToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endpoint",
			"value": "localhost:3000/api"
		},
		{
			"key": "userName",
			"value": "testingUser"
		},
		{
			"key": "userEmail",
			"value": "test@example.com"
		},
		{
			"key": "userPassword",
			"value": "1234567891"
		},
		{
			"key": "primarCurrency",
			"value": "CZK"
		},
		{
			"key": "collectionAuthToken",
			"value": ""
		},
		{
			"key": "changedPrimarCurrency",
			"value": "USD"
		},
		{
			"key": "changeduserPassword",
			"value": "1234567892"
		},
		{
			"key": "cashAccountName",
			"value": "cash account 1"
		},
		{
			"key": "debitAccountName",
			"value": "debit account 1"
		},
		{
			"key": "creditAccountName",
			"value": "credit account 1"
		},
		{
			"key": "debtAccountName",
			"value": "debr account 1"
		},
		{
			"key": "investAccountName",
			"value": "invest account 1"
		},
		{
			"key": "initialBalance",
			"value": "42"
		},
		{
			"key": "creditLimit",
			"value": "100"
		},
		{
			"key": "categoryName",
			"value": "testing Category"
		},
		{
			"key": "changedCategoryName",
			"value": "Changed Name"
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "cashAccountId",
			"value": ""
		},
		{
			"key": "debitAccountId",
			"value": ""
		},
		{
			"key": "creditAccountId",
			"value": ""
		},
		{
			"key": "debtAccountId",
			"value": ""
		},
		{
			"key": "investAccountId",
			"value": ""
		},
		{
			"key": "firstTransactionId",
			"value": ""
		},
		{
			"key": "currentdate",
			"value": ""
		}
	]
}